<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Eatwell - Make The World A Tastier Place</title>
    <link rel="preconnect" href="https://fonts.gstatic.com" />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@700&family=Roboto:wght@400;700&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="styles/shared.css" />
    <link rel="stylesheet" href="styles/restaurants.css" />
    <script src="scripts/responsive.js" defer></script>
  </head>
  <body>
    <header id="main-header">
      <div id="logo"><a href="/">Eatwell</a></div>
      <nav>
        <ul>
          <li class="nav-item">
            <!-- <a href="restaurants.html">Browse Restaurants</a> -->
            <a href="/restaurants">Browse Restaurants</a>
            <!-- We can't simply link to "html files" right now. -->
            <!-- / means it's appended directly after the domain name -->
            <!-- ex: www.eatwell.com/restaurants -->
            <!-- The html file (ejs file) that we want to show when a user goes to /restaurants is set on the app.js -->
            <!-- We've told express that we want to render "restaurants.ejs" if the user asked for /restaurants in the app.js file. -->
          </li>
          <li class="nav-item">
            <a href="/recommend">Share a Restaurant</a>
          </li>
          <li class="nav-item"><a href="/about">About Eatwell</a></li>
        </ul>
      </nav>
      <button id="drawer-btn">
        <span></span>
        <span></span>
        <span></span>
      </button>
    </header>
    <aside id="mobile-drawer">
      <nav>
        <ul>
          <li class="nav-item">
            <a href="/restaurants">Browse Restaurants</a>
          </li>
          <li class="nav-item">
            <a href="/recommend">Share a Restaurant</a>
          </li>
          <li class="nav-item"><a href="/about">About Eatwell</a></li>
        </ul>
      </nav>
    </aside>
    <main>
      <h1>Recommended restaurants</h1>
      <% if (numberOfRestaurants === 0) { %>
      <p>
        Unfortunately, we have no restaurants yet - maybe start recommending
        some?
      </p>
      <% } else { %>
      <p>Find your next favorite restaurants with help of our other users!</p>
      <p>We found <%= numberOfRestaurants %> restaurants.</p>
      <!-- We need to make the content inside this html file dynamic -->
      <!-- For that, we can use a special EJS syntax which is only available because -->
      <!-- we are in a EJS file that will be parsed and converted by the EJS package. -->
      <!-- EJS package will replace numberOfRestaurants with a concrete value -->
      <!-- We can provide that value through app.js -->
      <!-- But when we open up the browser dev tools, we can't see this special syntax -->
      <!-- Instead we could see a normal <p></p> paragraph with the text and the number on it. -->
      <!-- Because this file is parsed and rendered on the server, -->
      <!-- and only the "finished" html code is sent to the browser. -->
      <ul id="restaurants-list">
        <% for (const restaurant of restaurants) { %>
        <li class="restaurant-item">
          <article>
            <h2><%= restaurant.name %></h2>
            <div class="restaurant-meta">
              <p><%= restaurant.cuisine %></p>
              <p><%= restaurant.address %></p>
              <!-- The keys used in here like "name" and "cuisine" are the same keys written inside the .json file. -->
            </div>
            <p><%= restaurant.description %></p>
            <div class="restaurant-actions">
              <a href="<%= restaurant.website %>">View Website</a>
              <!-- We can use EJS placeholders in "attribute values" as well. -->
              <!-- We can use EJS placeholders in actually anywhere on this ejs file. -->
            </div>
          </article>
        </li>
        <% } %>
        <!-- We can write JavaScript code inside EJS files like this. -->
        <!-- To create the for loop, we don't add a = sign after the % mark as we did on the numberOfRestaurants. -->
        <!-- The code means that this "li" item will loop for every restaurant we insert. -->
        <!-- The keys used in here like name and cuisine are the keys written in the .json file. -->
        <!-- Now we need to make sure that "restaurants" is created as a key for this template in the app.js file, -->
        <!-- just like we created "numberOfRestaurants" as a key. -->
      </ul>
      <% } %>
      <!-- This is how we add a conditional if statement to an EJS file. -->
    </main>
  </body>
</html>

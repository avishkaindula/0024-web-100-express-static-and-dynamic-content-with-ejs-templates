<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include("includes/head") %>
    <link rel="stylesheet" href="styles/restaurants.css" />
  </head>
  <body>
    <%- include("includes/header") %> <%- include("includes/side-drawer") %>
    <main>
      <h1>Recommended restaurants</h1>
      <% if (numberOfRestaurants === 0) { %>
      <p>
        Unfortunately, we have no restaurants yet - maybe start recommending
        some?
      </p>
      <% } else { %>
      <p>Find your next favorite restaurants with help of our other users!</p>
      <p>We found <%= numberOfRestaurants %> restaurants.</p>
      <!-- We need to make the content inside this html file dynamic -->
      <!-- For that, we can use a special EJS syntax which is only available because -->
      <!-- we are in a EJS file that will be parsed and converted by the EJS package. -->
      <!-- EJS package will replace numberOfRestaurants with a concrete value -->
      <!-- We can provide that value through app.js -->
      <!-- But when we open up the browser dev tools, we can't see this special syntax -->
      <!-- Instead we could see a normal <p></p> paragraph with the text and the number on it. -->
      <!-- Because this file is parsed and rendered on the server, -->
      <!-- and only the "finished" html code is sent to the browser. -->
      <!-- If there's a = sign after % it means that the output will be a "row text." -->
      <!-- The = sign does something which is called "escaping." -->
      <ul id="restaurants-list">
        <% for (const restaurant of restaurants) { %> <%-
        include("includes/restaurants/restaurant-item", {restaurant: restaurant
        }) %>
        <!-- The first "restaurant" is the key name that is made available for the restaurant-item.ejs -->
        <!-- The fist "restaurant" is the one which is written like "restaurant.name" in the restaurant-item.ejs file. -->
        <!-- The second "restaurant" is the restaurant which is inside => for (const restaurant of restaurants) -->
        <% } %>
        <!-- We can write JavaScript code inside EJS files like this. -->
        <!-- To create the for loop, we don't add a = sign after the % mark as we did on the numberOfRestaurants. -->
        <!-- The code means that this "li" item will loop for every restaurant we insert. -->
        <!-- Now we need to make sure that "restaurants" is created as a key for this template in the app.js file, -->
        <!-- just like we created "numberOfRestaurants" as a key. -->
      </ul>
      <% } %>
      <!-- This is how we add a conditional if statement to an EJS file. -->
    </main>
  </body>
</html>
